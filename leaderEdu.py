import telebot
from telebot import types
from config import TOKEN

bot = telebot.TeleBot(
    TOKEN, parse_mode="html")

lang = ''


@bot.message_handler(commands=['start', 'news'])
def get_lang(message):
    if (message.text == '/start'):
        markup = types.ReplyKeyboardMarkup()
        ru = types.KeyboardButton("üá∑üá∫–†—É—Å–∫–∏–π")
        uz = types.KeyboardButton("üá∫üáøO`zbek")
        us = types.KeyboardButton("üá∫üá∏English")
        markup.row(ru, uz, us)
        bot.send_message(message.chat.id, "<em>–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞üí¨</em>")
        bot.send_message(message.chat.id, '<em>Tilini tanlangüí¨</em>')
        bot.send_message(
            message.chat.id, '<em>Choose languageüí¨</em>', reply_markup=markup)
    else:
        pass


# menu

def get_menu(message, lang):
    markup = types.ReplyKeyboardMarkup()
    if(lang == 'ru'):
        ourCourses = types.KeyboardButton("–ù–∞—à–∏ –∫—É—Ä—Å—ã")
        onlineTest = types.KeyboardButton("–û–Ω–ª–∞–π–Ω —Ç–µ—Å—Ç")
        contacts = types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã")
        langg = types.KeyboardButton("–°–º–µ–Ω–∞ —è–∑—ã–∫–∞")
        callback = types.KeyboardButton("–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫")
        about = types.KeyboardButton("–û –Ω–∞—Å")
        markup.row(ourCourses)
        markup.row(onlineTest, contacts)
        markup.row(callback, about)
        markup.row(langg)
        bot.send_message(message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)

    if(lang == 'uz'):
        ourCourses = types.KeyboardButton("Kurslarimiz")
        onlineTest = types.KeyboardButton("Onlayn test")
        contacts = types.KeyboardButton("Contactlarimiz")
        langg = types.KeyboardButton("Tilini o'zgartirish")
        callback = types.KeyboardButton("Qung`roq qilish")
        about = types.KeyboardButton("Biza haqimizda")
        markup.row(ourCourses)
        markup.row(onlineTest, contacts)
        markup.row(callback, about)
        markup.row(langg)
        bot.send_message(message.chat.id, "Bosh menu", reply_markup=markup)

    if(lang == 'us'):
        ourCourses = types.KeyboardButton("Our courses")
        onlineTest = types.KeyboardButton("Online test")
        contacts = types.KeyboardButton("Contacts")
        langg = types.KeyboardButton("Change the language")
        callback = types.KeyboardButton("Callback")
        about = types.KeyboardButton("About us")
        markup.row(ourCourses)
        markup.row(onlineTest, contacts)
        markup.row(callback, about)
        markup.row(langg)
        bot.send_message(message.chat.id, "Main menu", reply_markup=markup)


# ourCourses

def get_ourCourses(call, lang):
    markup = types.ReplyKeyboardMarkup()
    if(lang == 'ru'):
        fastCourse = types.KeyboardButton("–ë—ã—Ç—Ä—ã–µ –∫—É—Ä—Å—ã")
        intensiveCourse = types.KeyboardButton("–ò–Ω—Ç–∏–Ω—Å–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã")
        easyCourse = types.KeyboardButton("–õ–µ–∫–∏–µ –∫—É—Ä—Å—ã")
        Course = types.KeyboardButton("–û–±—ã—á–Ω—ã–µ –∫—É—Ä—Å—ã")
        get_menu = types.KeyboardButton("üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.row(fastCourse, intensiveCourse)
        markup.row(easyCourse, Course)
        markup.row(get_menu)
        bot.send_message(call.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å", reply_markup=markup)

    if(lang == 'uz'):
        fastCourse = types.KeyboardButton("Tezkor kurslar")
        intensiveCourse = types.KeyboardButton("Intensiv kurslar")
        easyCourse = types.KeyboardButton("Osan kurslar")
        Course = types.KeyboardButton("Oddiy kurslar")
        get_menu = types.KeyboardButton("üîôBosh menu")
        markup.row(fastCourse, intensiveCourse)
        markup.row(easyCourse, Course)
        markup.row(get_menu)
        bot.send_message(call.chat.id, "Kursni tanglang", reply_markup=markup)

    if(lang == 'us'):
        fastCourse = types.KeyboardButton("Fast courses")
        intensiveCourse = types.KeyboardButton("Intinsive courses")
        easyCourse = types.KeyboardButton("Easy courses")
        Course = types.KeyboardButton("Simple courses")
        get_menu = types.KeyboardButton("üîôMain menu")
        markup.row(fastCourse, intensiveCourse)
        markup.row(easyCourse, Course)
        markup.row(get_menu)
        bot.send_message(call.chat.id, "Choose your course",
                         reply_markup=markup)


# Corses


# fastInfo
def fastInfo(message, lang):
    markup = types.InlineKeyboardMarkup()
    if (lang == 'ru'):
        register = types.InlineKeyboardButton(
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data='reg')
        markup.add(register)
        bot.send_message(
            message.chat.id, "Fast course\n –í –Ω–µ–¥–µ–ª—é: 3 —Ä–∞–∑–∞\n–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å: 1,5 —á–∞—Å–∞\n\n–°—Ç–æ–∏–º–æ—Ç—å –∑–∞–Ω—è—Ç–∏–µ –≤ –º–µ—Å—è—Ü: 2 –º–ª–Ω —Å—É–º–º\nLorem ipsum dolor sit amet consectetur adipisicing elit. \nAsperiores laboriosam dolores necessitatibus, \nblanditiis autem esse eos in impedit eveniet voluptatum \nincidunt ab quod, eaque minima error ducimus \nmollitia nihil quaerat. ", reply_markup=markup)

    if (lang == 'uz'):
        register = types.InlineKeyboardButton(
            "Regitrasiya qilish", callback_data='reg')
        markup.add(register)
        bot.send_message(
            message.chat.id, "Fast course\n –í –Ω–µ–¥–µ–ª—é: 3 —Ä–∞–∑–∞\n–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å: 1,5 —á–∞—Å–∞\n\n–°—Ç–æ–∏–º–æ—Ç—å –∑–∞–Ω—è—Ç–∏–µ –≤ –º–µ—Å—è—Ü: 2 –º–ª–Ω —Å—É–º–º\nLorem ipsum dolor sit amet consectetur adipisicing elit. \nAsperiores laboriosam dolores necessitatibus, \nblanditiis autem esse eos in impedit eveniet voluptatum \nincidunt ab quod, eaque minima error ducimus \nmollitia nihil quaerat. ", reply_markup=markup)

    if (lang == 'us'):
        register = types.InlineKeyboardButton(
            "Registration", callback_data='reg')
        markup.add(register)
        bot.send_message(
            message.chat.id, "Fast course\n –í –Ω–µ–¥–µ–ª—é: 3 —Ä–∞–∑–∞\n–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å: 1,5 —á–∞—Å–∞\n\n–°—Ç–æ–∏–º–æ—Ç—å –∑–∞–Ω—è—Ç–∏–µ –≤ –º–µ—Å—è—Ü: 2 –º–ª–Ω —Å—É–º–º\nLorem ipsum dolor sit amet consectetur adipisicing elit. \nAsperiores laboriosam dolores necessitatibus, \nblanditiis autem esse eos in impedit eveniet voluptatum \nincidunt ab quod, eaque minima error ducimus \nmollitia nihil quaerat. ", reply_markup=markup)


# FastInfo get_reg

def get_reg(message, lang):
    markup = types.KeyboardButton(
        request_contact=True, text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–π")
    if (lang == 'ru'):
        bot.send_message(types.MessageID, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–π",
                         reply_to_message_id="–ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è", reply_markup=markup)


# intensiveInfo
def intensiveInfo(message, lang):
    markup = types.InlineKeyboardMarkup()
    if (lang == 'ru'):
        register = types.InlineKeyboardButton(
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data='reg')
        testing = types.InlineKeyboardButton(
            "–ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç", callback_data='test')
        markup.add(register, testing)
        bot.send_message(
            message.chat.id, "intensive course\n –í –Ω–µ–¥–µ–ª—é: 3 —Ä–∞–∑–∞\n–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å: 1,5 —á–∞—Å–∞\n\n–°—Ç–æ–∏–º–æ—Ç—å –∑–∞–Ω—è—Ç–∏–µ –≤ –º–µ—Å—è—Ü: 2 –º–ª–Ω —Å—É–º–º\nLorem ipsum dolor sit amet consectetur adipisicing elit. \nAsperiores laboriosam dolores necessitatibus, \nblanditiis autem esse eos in impedit eveniet voluptatum \nincidunt ab quod, eaque minima error ducimus \nmollitia nihil quaerat. ", reply_markup=markup)

# intensiveInfo get_reg


# easyInfo
def easyInfo(message, lang):
    markup = types.InlineKeyboardMarkup()
    if (lang == 'ru'):
        register = types.InlineKeyboardButton(
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data='reg')
        markup.add(register)
        bot.send_message(
            message.chat.id, "easy course\n –í –Ω–µ–¥–µ–ª—é: 3 —Ä–∞–∑–∞\n–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å: 1,5 —á–∞—Å–∞\n\n–°—Ç–æ–∏–º–æ—Ç—å –∑–∞–Ω—è—Ç–∏–µ –≤ –º–µ—Å—è—Ü: 2 –º–ª–Ω —Å—É–º–º\nLorem ipsum dolor sit amet consectetur adipisicing elit. \nAsperiores laboriosam dolores necessitatibus, \nblanditiis autem esse eos in impedit eveniet voluptatum \nincidunt ab quod, eaque minima error ducimus \nmollitia nihil quaerat. ", reply_markup=markup)


# CourseInfo
def CourseInfo(message, lang):
    markup = types.InlineKeyboardMarkup()
    if (lang == 'ru'):
        register = types.InlineKeyboardButton(
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data='reg')
        testing = types.InlineKeyboardButton(
            "–ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç", callback_data='test')
        markup.add(register, testing)
        bot.send_message(
            message.chat.id, "simple course\n –í –Ω–µ–¥–µ–ª—é: 3 —Ä–∞–∑–∞\n–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å: 1,5 —á–∞—Å–∞\n\n–°—Ç–æ–∏–º–æ—Ç—å –∑–∞–Ω—è—Ç–∏–µ –≤ –º–µ—Å—è—Ü: 2 –º–ª–Ω —Å—É–º–º\nLorem ipsum dolor sit amet consectetur adipisicing elit. \nAsperiores laboriosam dolores necessitatibus, \nblanditiis autem esse eos in impedit eveniet voluptatum \nincidunt ab quod, eaque minima error ducimus \nmollitia nihil quaerat. ", reply_markup=markup)


# onlineTest

def get_test(message):
    # photo = open('img/logo.png', 'rb')
    # bot.send_photo(message.from_user.id, photo)

    doc = open('tmp/file.txt', 'rb')
    bot.send_document(message.from_user.id, doc)

# Contacts


def get_contacts(message, lang):
    markup = types.InlineKeyboardMarkup()
    if (lang == 'ru'):
        location = types.InlineKeyboardButton(
            "üìç –ì–µ–æ–¥–∞–Ω–Ω—ã–µ", callback_data='location')
        markup.add(location)
        bot.send_message(message.chat.id, "–ù–∞—à–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –±–∏–∑–Ω–µ—Å —Ü–µ–Ω—Ç—Ä \n(Tashkent Plaza, 1 —ç—Ç–∞–∂, \n–æ—Ä–∏–µ–Ω—Ç–∏—Ä: '–ù–ë–£')\n\n–°–æ—Ü. —Å–µ—Ç—å\nFacebook: jakha921.com\nTelegramm: https://t.me.jakha921", reply_markup=markup)

    if (lang == 'uz'):
        location = types.InlineKeyboardButton(
            "üìç Geoloktsiya", callback_data='location')
        markup.add(location)
        bot.send_message(message.chat.id, "–ù–∞—à–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –±–∏–∑–Ω–µ—Å —Ü–µ–Ω—Ç—Ä \n(Tashkent Plaza, 1 —ç—Ç–∞–∂, \n–æ—Ä–∏–µ–Ω—Ç–∏—Ä: '–ù–ë–£')\n\n–°–æ—Ü. —Å–µ—Ç—å\nFacebook: jakha921.com\nTelegramm: https://t.me.jakha921", reply_markup=markup)

    if (lang == 'us'):
        location = types.InlineKeyboardButton(
            "üìç Locatioin", callback_data='location')
        markup.add(location)
        bot.send_message(message.chat.id, "–ù–∞—à–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –±–∏–∑–Ω–µ—Å —Ü–µ–Ω—Ç—Ä \n(Tashkent Plaza, 1 —ç—Ç–∞–∂, \n–æ—Ä–∏–µ–Ω—Ç–∏—Ä: '–ù–ë–£')\n\n–°–æ—Ü. —Å–µ—Ç—å\nFacebook: jakha921.com\nTelegramm: https://t.me.jakha921", reply_markup=markup)


# get_contact

def get_location(message):
    bot.send_location(message.from_user.id, latitude=41.3252, longitude=69.2323)


# get_callback

def get_callback(message):
    bot.send_contact(
        message.chat.id, phone_number="+998913339636", first_name="Jakha")


# about

def get_about(message, lang):
    if(lang == 'ru'):
        bot.send_message(message.chat.id, "–û –Ω–∞—Å")
        photo = open('img/logo.png', 'rb')
        bot.send_photo(message.from_user.id, photo)
        bot.send_message(
            message.chat.id, "Lorem ipsum dolor sit amet consectetur adipisicing elit. Velit, inventore nihil deleniti harum eligendi sed deserunt\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Velit, inventore nihil deleniti harum eligendi sed deserunt")

    if(lang == 'uz'):
        bot.send_message(message.chat.id, "Biz haqimizda")
        photo = open('img/logo.png', 'rb')
        bot.send_photo(message.from_user.id, photo)
        bot.send_message(
            message.chat.id, "Lorem ipsum dolor sit amet consectetur adipisicing elit. Velit, inventore nihil deleniti harum eligendi sed deserunt\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Velit, inventore nihil deleniti harum eligendi sed deserunt")

    if(lang == 'us'):
        bot.send_message(message.chat.id, "About us")
        photo = open('img/logo.png', 'rb')
        bot.send_photo(message.from_user.id, photo)
        bot.send_message(
            message.chat.id, "Lorem ipsum dolor sit amet consectetur adipisicing elit. Velit, inventore nihil deleniti harum eligendi sed deserunt\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Velit, inventore nihil deleniti harum eligendi sed deserunt")


# inline func

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):

    if call.data == 'location':
        get_location(call)

    elif call.data == "get_menu":
        get_menu(call, lang)

    elif call.data == "reg":
        get_reg(call, lang)


# outline func

@ bot.message_handler(content_types=['text'])
def get_menus(message):
    global lang

    if message.text == 'üá∑üá∫–†—É—Å–∫–∏–π':
        lang = 'ru'
        get_menu(message, lang)

    elif message.text == 'üá∫üáøO`zbek':
        lang = 'uz'
        get_menu(message, lang)

    elif message.text == 'üá∫üá∏English':
        lang = 'us'
        get_menu(message, lang)

    elif (message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã") or (message.text == "Contactlarimiz") or (message.text == "Contacts"):
        get_contacts(message, lang)

    elif (message.text == "–ù–∞—à–∏ –∫—É—Ä—Å—ã") or (message.text == "Kurslarimiz") or (message.text == "Our courses"):
        get_ourCourses(message, lang)

    elif (message.text == '–û–Ω–ª–∞–π–Ω —Ç–µ—Å—Ç') or (message.text == "Onlayn test") or (message.text == "Online test"):
        get_test(message)

    elif (message.text == '–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫') or (message.text == "Qung`roq qilish") or (message.text == "Callback"):
        get_callback(message)

    elif (message.text == '–û –Ω–∞—Å') or (message.text == "Biza haqimizda") or (message.text == "About us"):
        get_about(message, lang)

    elif (message.text == '–°–º–µ–Ω–∞ —è–∑—ã–∫–∞') or (message.text == "Tilini o'zgartirish") or (message.text == "Change the language"):
        get_lang(message)

    elif (message.text == 'üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') or (message.text == "üîôBosh menu") or (message.text == "üîôMain menu"):
        get_menu(message, lang)

    elif (message.text == '–ë—ã—Ç—Ä—ã–µ –∫—É—Ä—Å—ã') or (message.text == "Tezkor kurslar") or (message.text == "Fast courses"):
        fastInfo(message, lang)

    elif (message.text == '–ò–Ω—Ç–∏–Ω—Å–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã') or (message.text == "Intensiv kurslar") or (message.text == "Intinsive courses"):
        intensiveInfo(message, lang)

    elif (message.text == '–õ–µ–∫–∏–µ –∫—É—Ä—Å—ã') or (message.text == "Osan kurslar") or (message.text == "Easy courses"):
        easyInfo(message, lang)

    elif (message.text == '–û–±—ã—á–Ω—ã–µ –∫—É—Ä—Å—ã') or (message.text == "Oddiy kurslar") or (message.text == "Simple courses"):
        CourseInfo(message, lang)


bot.polling()
